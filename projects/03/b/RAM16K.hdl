// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way (in=load, sel=address[12..13], a=loadRAM4KA, b=loadRAM4KB, c=loadRAM4KC, d=loadRAM4KD);
    RAM4K (in=in, load=loadRAM4KA, address=address[0..11], out=outRAM4KA);
    RAM4K (in=in, load=loadRAM4KB, address=address[0..11], out=outRAM4KB);
    RAM4K (in=in, load=loadRAM4KC, address=address[0..11], out=outRAM4KC);
    RAM4K (in=in, load=loadRAM4KD, address=address[0..11], out=outRAM4KD);
    Mux4Way16 (a=outRAM4KA, b=outRAM4KB, c=outRAM4KC, d=outRAM4KD, sel=address[12..13], out=out);
}